concurrency:
  cancel-in-progress: true
  group: review-${{ github.event.inputs.pr }}
env:
  EXTRA_ARGS: ${{ github.event.inputs.extra-args }}
  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
  PR: ${{ github.event.inputs.pr }}
jobs:
  build-aarch64-darwin:
    if: ${{ github.event.inputs.build-on-aarch64-darwin == 'true' }}
    name: nixpkgs-review for PR ${{ github.event.inputs.pr }} on aarch64-darwin
    outputs:
      built: ${{ steps.output.outputs.built }}
    runs-on: macos-latest
    steps:
      - uses: actions/cache@v4
        with:
          key: git-folder
          path: nixpkgs
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: nixpkgs
          ref: ${{ github.event.inputs.branch }}
      - uses: DeterminateSystems/nix-installer-action@v16
      - name: Configure git
        run: |
          git config --global user.email "user@example.com"
          git config --global user.name "user"
      - continue-on-error: true
        name: Run review
        run: |
          cd "$GITHUB_WORKSPACE/nixpkgs"
          # shellcheck disable=SC2086
          nix run .#nixpkgs-review -- pr "${PR//[^0-9]/}" --print-result --post-result --no-shell $EXTRA_ARGS
      - id: output
        name: Output
        run: |
          built=$(jq -r '.result[].built | join(", ")' ~/.cache/nixpkgs-review/*/report.json)
          echo "built=$built" | tee -a "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: build-logs-aarch64-darwin
          path: |
            /nix/var/log/*/drvs
            ~/.cache/nixpkgs-review/*/logs
  build-x86_64-darwin:
    if: ${{ github.event.inputs.build-on-x86_64-darwin == 'true' }}
    name: nixpkgs-review for PR ${{ github.event.inputs.pr }} on x86_64-darwin
    outputs:
      built: ${{ steps.output.outputs.built }}
    runs-on: macos-13
    steps:
      - uses: actions/cache@v4
        with:
          key: git-folder
          path: nixpkgs
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: nixpkgs
          ref: ${{ github.event.inputs.branch }}
      - uses: DeterminateSystems/nix-installer-action@v16
      - name: Configure git
        run: |
          git config --global user.email "user@example.com"
          git config --global user.name "user"
      - continue-on-error: true
        name: Run review
        run: |
          cd "$GITHUB_WORKSPACE/nixpkgs"
          # shellcheck disable=SC2086
          nix run .#nixpkgs-review -- pr "${PR//[^0-9]/}" --print-result --post-result --no-shell $EXTRA_ARGS
      - id: output
        name: Output
        run: |
          built=$(jq -r '.result[].built | join(", ")' ~/.cache/nixpkgs-review/*/report.json)
          echo "built=$built" | tee -a "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: build-logs-x86_64-darwin
          path: |
            /nix/var/log/*/drvs
            ~/.cache/nixpkgs-review/*/logs
  build-x86_64-linux:
    if: ${{ github.event.inputs.build-on-x86_64-linux == 'true' }}
    name: nixpkgs-review for PR ${{ github.event.inputs.pr }} on x86_64-linux
    outputs:
      built: ${{ steps.output.outputs.built }}
    runs-on: ubuntu-latest
    steps:
      - if: ${{ github.event.inputs.free-space == 'true' }}
        uses: thiagokokada/free-disk-space@main
      - uses: actions/cache@v4
        with:
          key: git-folder
          path: nixpkgs
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: nixpkgs
          ref: ${{ github.event.inputs.branch }}
      - uses: DeterminateSystems/nix-installer-action@v16
      - name: Configure git
        run: |
          git config --global user.email "user@example.com"
          git config --global user.name "user"
      - continue-on-error: true
        name: Run review
        run: |
          cd "$GITHUB_WORKSPACE/nixpkgs"
          # shellcheck disable=SC2086
          nix run .#nixpkgs-review -- pr "${PR//[^0-9]/}" --print-result --post-result --no-shell $EXTRA_ARGS
      - id: output
        name: Output
        run: |
          built=$(jq -r '.result[].built | join(", ")' ~/.cache/nixpkgs-review/*/report.json)
          echo "built=$built" | tee -a "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: build-logs-x86_64-linux
          path: |
            /nix/var/log/*/drvs
            ~/.cache/nixpkgs-review/*/logs
  notify:
    if: always()
    name: Notify Telegram
    needs:
      - build-x86_64-linux
      - build-aarch64-darwin
      - build-x86_64-darwin
    runs-on: ubuntu-latest
    steps:
      - id: pre_notify
        run: |
          echo "pr_link=https://github.com/NixOS/nixpkgs/pull/${PR//[^0-9]/}" | tee -a "$GITHUB_OUTPUT"
      - uses: appleboy/telegram-action@v1.0.1
        with:
          message: |-
            Finished nixpkgs-review for PR: ${{ steps.pre_notify.outputs.pr_link }}

            Run report: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            Packages built:
            - x86_64-linux: ${{ needs.build-x86_64-linux.outputs.built }}
            - aarch64-darwin: ${{ needs.build-aarch64-darwin.outputs.built }}
            - x86_64-darwin: ${{ needs.build-x86_64-darwin.outputs.built }}
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
name: nixpkgs-review PR
"on":
  workflow_dispatch:
    inputs:
      branch:
        default: master
        description: Nixpkgs branch
        options:
          - master
          - staging
        type: choice
      build-on-aarch64-darwin:
        default: true
        description: Build on aarch64-darwin
        required: true
        type: boolean
      build-on-x86_64-darwin:
        default: true
        description: Build on x86_64-darwin
        required: true
        type: boolean
      build-on-x86_64-linux:
        default: true
        description: Build on x86_64-linux
        required: true
        type: boolean
      extra-args:
        default: ""
        description: Extra args for nixpkgs-review
        required: false
        type: string
      free-space:
        default: false
        description: Run workflow to increase free space
        required: true
        type: boolean
      pr:
        description: PR number
        required: true
        type: string
run-name: nixpkgs-review for PR ${{ github.event.inputs.pr }}
